//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinMonitorApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class WinMonitorEntityModelContext : DbContext
    {
        public WinMonitorEntityModelContext()
            : base("name=WinMonitorEntityModelContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DBCalendar> DBCalendars { get; set; }
        public DbSet<DBCompany> DBCompanies { get; set; }
        public DbSet<DBComponent_With_Status> DBComponent_With_Status { get; set; }
        public DbSet<DBDataCenter> DBDataCenters { get; set; }
        public DbSet<DBEmailPage> DBEmailPages { get; set; }
        public DbSet<DBIncident> DBIncidents { get; set; }
        public DbSet<DBLogHistory> DBLogHistories { get; set; }
        public DbSet<DBMaster_DBComponent_With_Status> DBMaster_DBComponent_With_Status { get; set; }
        public DbSet<DBSubscription> DBSubscriptions { get; set; }
        public DbSet<DBLogin> DBLogins { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GetDateDiffInSec(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetDateDiffInSec", startTimeParameter, endTimeParameter);
        }
    }
}
